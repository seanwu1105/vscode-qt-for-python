{
  "name": "vscode-qt-for-python",
  "displayName": "Qt for Python",
  "description": "Visual Studio Code extension for PySide6 and PyQt6.",
  "version": "4.0.0",
  "publisher": "seanwu",
  "license": "MIT",
  "engines": {
    "vscode": "^1.69.0"
  },
  "main": "./out/extension.js",
  "scripts": {
    "postinstall": "cd python && poetry install --no-interaction --no-root && cd ..",
    "vscode:prepublish": "npm run package",
    "compile": "npm run clean && webpack",
    "watch": "npm run clean && webpack --watch",
    "package": "npm run clean && webpack --mode production --devtool hidden-source-map",
    "compile:tests": "npm run clean && tsc -p .",
    "watch:tests": "npm run clean && tsc -p . -w",
    "pretest": "npm run compile:tests",
    "lint": "prettier --check . && eslint src",
    "test": "node ./out/test/runTest.js",
    "clean": "node ./clean.js",
    "prepare": "husky install"
  },
  "dependencies": {
    "vscode-uri": "^3.0.3"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/sinon": "^10.0.13",
    "@types/vscode": "^1.69.0",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^5.30.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.18.0",
    "eslint-config-prettier": "^8.5.0",
    "glob": "^8.0.3",
    "husky": "^8.0.0",
    "lint-staged": "^13.0.3",
    "mocha": "^10.0.0",
    "prettier": "2.7.1",
    "sinon": "^14.0.0",
    "ts-loader": "^9.3.1",
    "typescript": "^4.7.4",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "extensionDependencies": [
    "ms-python.python"
  ],
  "activationEvents": [
    "onLanguage:qml",
    "workspaceContains:**/*.ui",
    "onCommand:qtForPython.compileResource",
    "onCommand:qtForPython.compileUi",
    "onCommand:qtForPython.createUi",
    "onCommand:qtForPython.editUi"
  ],
  "contributes": {
    "languages": [
      {
        "id": "qml",
        "extensions": [
          ".qml"
        ],
        "aliases": [
          "QML",
          "qml"
        ],
        "configuration": "./languages/qml.json"
      },
      {
        "id": "qmldir",
        "filenames": [
          "qmldir"
        ],
        "aliases": [
          "QML Directory",
          "qmldir"
        ],
        "configuration": "./languages/qmldir.json"
      },
      {
        "id": "qss",
        "extensions": [
          ".qss"
        ],
        "aliases": [
          "QSS",
          "qss"
        ],
        "configuration": "./languages/qss.json"
      },
      {
        "id": "xml",
        "firstLine": "^<\\?xml\\s+.*\\?>\\s*",
        "extensions": [
          ".qrc",
          ".ui"
        ]
      }
    ],
    "commands": [
      {
        "command": "qtForPython.compileResource",
        "title": "Compile Qt Resource File",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.compileUi",
        "title": "Compile Qt UI File",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.createUi",
        "title": "Create Qt UI File",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.editUi",
        "title": "Edit Qt UI File",
        "category": "Qt for Python"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.createUi",
          "when": "explorerResourceIsFolder == true",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.editUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        }
      ],
      "explorer/context": [
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.createUi",
          "when": "explorerResourceIsFolder == true",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.editUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        }
      ],
      "editor/title": [
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.createUi",
          "when": "explorerResourceIsFolder == true",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.editUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        }
      ],
      "editor/context": [
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.createUi",
          "when": "explorerResourceIsFolder == true",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.editUi",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        }
      ]
    },
    "configuration": {
      "title": "Qt for Python",
      "properties": {
        "qtForPython.qmllint.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable the Qt `qmllint` integration.",
          "scope": "resource"
        },
        "qtForPython.qmllint.path": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to Qt `qmllint` executable. Set to empty string to automatically resolve from the installed Python package. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.qmllint.options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "The options passed to Qt `qmllint` executable. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.rcc.path": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to Qt `rcc` executable. Set to empty string to automatically resolve from the installed Python package. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.rcc.options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "-o",
            "${resourceDirname}${pathSeparator}rc_${resourceBasenameNoExtension}.py"
          ],
          "markdownDescription": "The options passed to Qt `rcc` executable. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.uic.liveExecution": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically recompile Qt UI files when any `*.ui` file has changed or created."
        },
        "qtForPython.uic.path": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to Qt `uic` executable. Set to empty string to automatically resolve from the installed Python package. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.uic.options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "-o",
            "${resourceDirname}${pathSeparator}ui_${resourceBasenameNoExtension}.py"
          ],
          "markdownDescription": "The options passed to Qt `uic` executable. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.designer.path": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to Qt `designer` executable. Set to empty string to automatically resolve from the installed Python package. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        },
        "qtForPython.designer.options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "The options passed to Qt `designer` executable. See [here](https://github.com/seanwu1105/vscode-qt-for-python#predefined-variables) for a detailed list of predefined variables.",
          "scope": "resource"
        }
      }
    },
    "grammars": [
      {
        "language": "qml",
        "scopeName": "source.qml",
        "path": "./syntaxes/qml.tmLanguage.json"
      },
      {
        "language": "qmldir",
        "scopeName": "source.qmldir",
        "path": "./syntaxes/qmldir.tmLanguage.json"
      },
      {
        "language": "qss",
        "scopeName": "source.qss",
        "path": "./syntaxes/qss.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "qml",
        "path": "./snippets/qml.json"
      },
      {
        "language": "qmldir",
        "path": "./snippets/qmldir.json"
      },
      {
        "language": "qss",
        "path": "./snippets/qss.json"
      }
    ]
  },
  "homepage": "https://github.com/seanwu1105/vscode-qt-for-python",
  "icon": "assets/images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/seanwu1105/vscode-qt-for-python.git"
  },
  "bugs": {
    "url": "https://github.com/seanwu1105/vscode-qt-for-python/issues",
    "email": "seanwu1105@gmail.com"
  },
  "badges": [
    {
      "url": "https://img.shields.io/visual-studio-marketplace/v/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/r/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "rating"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/d/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "downloads"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/i/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "installs"
    }
  ],
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters",
    "Formatters",
    "Other"
  ],
  "keywords": [
    "multi-root ready",
    "QML",
    "PySide",
    "PyQt",
    "Qt"
  ]
}
